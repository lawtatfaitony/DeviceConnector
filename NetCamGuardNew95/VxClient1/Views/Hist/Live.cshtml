@using LanguageResource
@using Common
@using VideoGuard.ApiModels
@using FastConnector.HistRecognize
@model VideoGuard.ApiModels.ResponseModalX

@{
    ViewBag.Title = "LIVE";
    Layout = "~/Views/Shared/_LayoutBlank.cshtml";
}
@if (Model.meta.Success)
{
    LiveRoomInitializeSRV liveRoomInitialize = (LiveRoomInitializeSRV)Model.data;
    <style>
        .div-relative { 
            color: #d907f8;
            border: 0px solid #d907f8;
            width: 100%;
            height: 100%;
            scrollbar-3dlight-color: aqua;
        }

        .div-a {
            position: absolute;
            top: 30px;
            left: 0px;
            right: 0px;
            border: 10px solid #ffd800;
            border-radius: 10px;
            width: 100%;
            height: 90%;
            opacity: 0.999;
            overflow-y: hidden;
            overflow-x: hidden;
            background-color: dimgray;
            box-shadow: rgba(169, 251, 251, 0.84) 0px 0px 10px inset;
        }
    </style>
    <!--~~/JS/DigitalCoolRains.js--> 
    
    <div id="bgGround" class="div-relative bg-transparent m-0 p-0" tabindex="-999">
        <canvas id="q" class=" " style="opacity:1;width:100%">
            <!-- transparents-->
            <script src="~/js/DigitalCoolRains.js"></script>
        </canvas>
    </div>

    <ul class="list-unstyled list-group-horizontal p-1" hidden>
        <li class="list-inline-item"><input type="text" title="spanCurrentIndexTimeStamp" id="spanCurrentIndexTimeStamp" value="@liveRoomInitialize.CurrentIndexTimeStamp" /></li>
        <li class="list-inline-item"><input type="text" title="spanCurrentIndexId" id="spanCurrentIndexId" value="@liveRoomInitialize.CurrentIndexId" /></li>
    </ul>
    <div class="container div-a border-primary p-0" id="DynamicLiveRoom" tabindex="-1">
        <div class="box-body sidebar" id="divscroll" style="min-height:700px;">
            <table class="table table-striped table-hover" id="LiveTable1">
                <thead>
                    <tr class="text-white text-bold cssTr">
                        <th style="max-width:166px;">
                            <div class="text-nowrap " title="ID" data-toggle="tooltip">
                                <span class="text-white text-bold fa-2x  fas fa-id-card"> ID </span> <!--fa-caret-right-->
                            </div>
                        </th>
                        <th>
                            <div class="text-nowrap" title="@Lang.Library_Name" data-toggle="tooltip"><span class="fas fa-cog  fa-2x "></span></div>
                        </th>
                        <th>
                            <div class="text-nowrap" title="@string.Format("{0} {1}",Lang.Person_Name,Lang.Person_Id)" data-toggle="tooltip" style="max-width:80px;overflow-x:hidden"><span class="fas fa-id-card  fa-2x "> </span></div>
                        </th>
                        <th>
                            <div class="text-nowrap" title="Capture" data-toggle="tooltip"><span class="far  fa-image fa-2x text-bold"> </span></div>
                        </th>
                        <th>
                            <div class="text-nowrap" title="OccurDateTime" data-toggle="tooltip">
                                <span class="fas fa-user-clock  fa-2x "> </span>
                            </div>
                        </th>
                    </tr>
                </thead>
                <tbody id="DynamicLiveTbody" class="">
                    @{int x = 0;}
                    @foreach (var item in liveRoomInitialize.ListTop25)
                    {
                        if (x == 0)
                        {
                            <tr id="TrTop" class="bg-danger-gradient"></tr>
                        }
                        x++;
                        <tr class="cssTr" id="@string.Format("tr{0}",item.Id)">
                            <td id="@string.Format(" td{0}",item.Id)" class="text-omit small" data-toggle="tooltip" title="@item.Id">
                                <div id="@string.Format("div{0}",item.Id)" class="text-nowrap d-flex flex-row" style="cursor:pointer;">
                                    <div class="mr-1">
                                        <span id="@string.Format("CLIDBOARD{0}",item.Id)" class="badge badge-warning h5 p-2" style="cursor:pointer;font-size:16px;" data-toggle="tooltip" title='@Lang.GeneralUI_ClickToCopy' onclick='getClipboardText()' data-clipboard-text='@item.Id'>@item.Id</span>
                                    </div>
                                </div>
                            </td>
                            <td class="" data-toggle="tooltip" title="@item.LibId">
                                <div class="h5 p-2 mt-1 " style="border-color:darkorange;border-width:2px;border-radius:6px;border-style:dashed;">@Html.DisplayFor(modelItem => item.LibName)</div>
                            </td>
                            <td class="text-omit small" data-toggle="tooltip" title="@item.LibId">
                                <div class="d-flex flex-column bd-highlight">
                                    <div class="pl-1 pr-1 bd-highlight h4">
                                        <span class="h4 text-bold badge badge-primary text-nowrap"> 
                                            <i class="fas fa-user-clock"></i>
                                            @string.Format("{0:yyyy-MM-dd HH:mm:ss}", item.ConvetToDateTime())
                                        </span>
                                    </div>
                                    <div class="pl-1 pr-1 bd-highlight h5"> @CommonBase.Substr(item.PersonName, 8)</div>
                                </div>
                            </td>
                            <td data-toggle="tooltip" title="Capture">
                                <div class="text-nowrap">
                                    <a href="@item.CapturePath" target="_blank"><img src="@item.CapturePath" class="img-responsive img-thumbnail" /></a>
                                </div>
                            <td>
                                <div class="text-nowrap" data-toggle="tooltip" title="OccurDateTime">
                                    <div class="text-nowrap" style="max-width:100px;max-height:100px;overflow:hidden">
                                        <a href="@item.PicPath" target="_blank"><img src="@item.PicPath" class="img-responsive img-thumbnail" /></a>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}
else
{
    <partial name="~/Views/Base/ResponseModal.cshtml" , for="@Model" />
}
<script>

    $(document).ready(function () {
        var InterValTimerId = setInterval(function () {
            var CurrentIndexTimeStamp = $("#spanCurrentIndexTimeStamp").val();
            var CurrentIndexId = $("#spanCurrentIndexId").val();
            console.log("Ready..." + CurrentIndexTimeStamp + " | " + CurrentIndexId);
            RecircleItemLive(CurrentIndexTimeStamp, CurrentIndexId);
            console.log("INTERVAL :: CurrentIndexTimeStamp :: " + CurrentIndexTimeStamp);
        }, 6000);

        //----------------------------------------------------
        var clearInterval = setInterval(function () {
            console.clear();
        }, 720000);
    });

    function RecircleItemLive(CurrentIndexTimeStamp, CurrentIndexId) {
        //debugger;
        var jsonItemUrl = '/' + '@LangUtilities.LanguageCode' + '/Hist/HistLiveRoomNextJsonItem';
        var myparamsObject = { "currentIndexTimeStamp": CurrentIndexTimeStamp };
        console.log("RecircleItemLive::myparamsObject::currentIndexTimeStamp:");
        console.log(myparamsObject); 
        $.ajax({
            url: jsonItemUrl,
            contentType: "application/x-www-form-urlencoded",
            data: myparamsObject,
            type: "post",
            dataType: "json",
            error:function (data) {
                console.log("RecircleItemLive Return ERROR ==========================================START");
                console.log(JSON.stringify(data));
                console.log(JSON.stringify(myparamsObject));
                console.log("RecircleItemLive Return ERROR ==========================================END");
            },
            success: function (result) {
                console.log("HistLiveRoomNextJsonItem::");
                console.log(result);
                if (result.meta.success === true) {
                    
                    var data = result.data;
                    if (data.currentIndexTimeStamp != 0 && CurrentIndexId != 0) {

                        $("#spanCurrentIndexTimeStamp").val(data.currentIndexTimeStamp);
                        $("#spanCurrentIndexId").val(data.currentIndexId);

                        console.log("RecircleItemLive GET NEXT::CurrentIndexId,CurrentIndexTimeStamp,TrId::-------------------------START INFO");
                        console.log("CurrentIndexId::" + CurrentIndexId);
                        console.log("CurrentIndexId(data)::" + data.currentIndexId);
                        console.log("CurrentIndexTimeStamp ::" + CurrentIndexTimeStamp);
                        console.log("CurrentIndexTimeStamp(data) ::" + data.currentIndexTimeStamp);
                        console.log("RecircleItemLive GET NEXT::CurrentIndexId,CurrentIndexTimeStamp,TrId::-------------------------END INFO  ");

                        renderNewItem(data.currentIndexId); //----------------------------------------------------------------------------------

                    } else {
                        console.log("[NO NEW ITEM] [RecircleItemLive Return INFO :: CurrentIndexTimeStamp = 0]");
                        console.log("CurrentIndexTimeStamp::" + CurrentIndexTimeStamp);
                    }
                }
                else {
                    console.log("RESPONE RETURN FAIL");
                    console.log(result);
                }
            }
        });
    }
     function renderNewItem(histRecognizeRecordId) {
        var renderItemUrl = '/' + '@LangUtilities.LanguageCode' + '/Hist/HistLiveRoomItem';
        console.log(renderItemUrl);
        var myparamsObject = { "histRecognizeRecordId": histRecognizeRecordId };
        $.ajax({
            url: renderItemUrl,
            contentType: "application/x-www-form-urlencoded",
            data: myparamsObject,
            type: "Post",
            dataType: "html",
            error: function (data) {
                console.log("FUNC::renderNewItem ::>ERROR");
                console.log(data);
            },
            success: function (response) {
                console.log("RESPONSE：-----------------------------------------------------------------------------");
                //console.log(response);
                if (typeof response === 'number' && !isNaN(response)) {

                    console.log("ILLEGAL histRecognizeRecordId::" + histRecognizeRecordId + "  as Result:");

                } else {
                    console.log("renderNewItem Html Return SUCC || histRecognizeRecordId =" + histRecognizeRecordId);
                    console.log("TR HTML-----------------------------------------------------------------------------");
                    //console.log(response);

                    var x = document.getElementById('DynamicLiveTbody').insertRow(0); //tbody DynamicLiveTbody LiveTable1
                    x.innerHTML = response;
                }
            }
        });
    }
</script>
